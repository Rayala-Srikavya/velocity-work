name: Deploy Snowflake Monitoring for Velocity

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install SnowSQL
        run: |
          sudo apt-get update && sudo apt-get install -y curl gzip
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.3/linux_x86_64/snowsql-1.3.2-linux_x86_64.bash
          SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.3.2-linux_x86_64.bash
          echo 'export PATH=~/snowflake/snowsql:$PATH' >> ~/.bashrc
          source ~/.bashrc

      - name: Run SnowSQL Scripts
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWSQL_USER }}
          SNOWSQL_PWD: ${{ secrets.SNOWSQL_PWD }}
          SNOWSQL_DATABASE: ${{ secrets.SNOWSQL_DATABASE }}
        run: |
          cat <<EOF > deploy.sql
          USE DATABASE ${SNOWSQL_DATABASE};
          USE ROLE ACCOUNTADMIN;

          -- Step 1: Grant privileges
          GRANT USAGE ON SCHEMA config TO ROLE ACCOUNTADMIN;
          GRANT INSERT ON TABLE config.alert_log TO ROLE ACCOUNTADMIN;

          --Step 2: Run setup scripts
          !source sql/01_create_known_tables.sql;
          !source sql/02_create_alert_log.sql;
          !source sql/03_create_procedure.sql;
          !source sql/04_create_task.sql;
          !source sql/05_create_alert.sql;

          --Step 3: Resume Task and Alert
          ALTER TASK monitoring.detect_new_tables_task RESUME;
          ALTER ALERT monitoring.new_table_alert RESUME;

          --Step 4: Trigger procedure manually
          CALL config.velocity_detect_new_tables_all_schemas();
          EOF
          
          ~/snowflake/snowsql \
            -a "${SNOWSQL_ACCOUNT}" \
            -u "${SNOWSQL_USER}" \
            -d "${SNOWSQL_DATABASE}" \
            -r ACCOUNTADMIN \
            -w COMPUTE_WH \
            -f deploy.sql 
